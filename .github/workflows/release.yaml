name: Release
run-name: ${{ github.event.pull_request.title }}

on:
  pull_request:
    types:
      - closed

jobs:
  create_release:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get package version
        id: get_package_version
        run: |
          VERSION=$(jq -r -c '.version' ./package.json)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          name: Release v${{ steps.get_package_version.outputs.VERSION }}
          tag_name: v${{ steps.get_package_version.outputs.VERSION }}

  test:
    uses: ./.github/workflows/test.yaml
    secrets: inherit
    needs:
      - create_release

  e2e_test:
    uses: ./.github/workflows/e2e-test.yaml
    secrets: inherit
    needs:
      - create_release

  build-and-release-package:
    runs-on: ubuntu-latest
    needs:
      - test
      - e2e_test
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: master
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      - run: npm install -g npm
      - run: npm ci
      - run: npm run build
      - run: npm publish --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
